{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","title","type","id","role","onClick","togglemode","htmlFor","Textarea","useState","text","settext","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","length","split","defaultProps","aboutText","Alert","alert","message","App","setmode","setAlert","msg","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47db6a99.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      \r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" >{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li> */}\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-a\" href=\"/About\">{props.aboutText}</a>\r\n        </li> */}\r\n        \r\n        \r\n      </ul>\r\n      <div className={`form-check form-switch text-${(props.mode==='light')?'dark':'light'} `}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Night Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:\"TextUtil\",\r\n    aboutText:\"AboutText\"\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText='';\r\n        settext(newText);\r\n        props.showAlert(\"Text Cleared\",\"danger\");\r\n    }\r\n\r\n    const handleOnChange= (event)=>{\r\n        settext(event.target.value)\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"mytextarea\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\",\"success\");\r\n    }\r\n\r\n    const [text,settext] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p className=\"h1 my-3\" style={{color: props.mode==='light'?'black':'white'}}>{props.heading}</p>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\"  value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'#c9c9c963':'#222222ba' , color: props.mode==='light'?'#222222ba':'white' }} id=\"mytextarea\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button> \r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button> \r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy to Clipboard</button> \r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear All</button> \r\n            </div>\r\n            <div style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h1 className=\"my-2\">Text Summary</h1>\r\n            <p>Words:{(text.length===0)?0:text.split(\" \").length}  Characters:{text.length}</p>\r\n            <p>Minutes required to read: {0.008*((text.length===0)?0:text.split(\" \").length)}({0.008*text.split(\" \").length*60} seconds)</p> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.message}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n\n  const [mode,setmode]= useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(msg,type)=>{\n      setAlert(\n        {\n          message:msg, \n          type:type\n        }\n        );\n        setTimeout(() => {\n          setAlert(null);\n        }, 700);\n  }\n\n  const togglemode=()=>{\n    if(mode==='dark'){\n      setmode('light');\n      document.body.style.backgroundColor='#c9c9c963';\n      showAlert(\"Light Mode Enabled\",\"success\");\n      document.title=\"TextUtils\";\n    }\n    else{\n      setmode('dark');\n      document.body.style.backgroundColor='#202f50';\n      showAlert(\"Night Mode Enabled\",\"success\");\n      document.title=\"TextUtils: Night\";\n    }\n  }\n\n\n\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode}  togglemode={togglemode}/>\n      <Alert alert={alert}/>\n      {/* <Switch>\n          <Route path=\"/About\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\"> */}\n            <div className=\"container\"><Textarea heading=\"Enter the text to analyze\" showAlert={showAlert} mode={mode}/></div>\n          {/* </Route>\n      </Switch> */}\n      \n      \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}